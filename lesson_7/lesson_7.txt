USE lesson_7;
SHOW TABLES;

DESC users;
DESC catalogs;
DESC products;

SELECT * FROM users;
SELECT * FROM catalogs;
SELECT * FROM products;
SELECT * FROM orders;

INSERT INTO orders (user_id)
SELECT id FROM users WHERE name = 'Геннадий';

INSERT INTO orders_products (order_id, product_id, total)
SELECT LAST_INSERT_ID(), id, 2 FROM products
WHERE name = 'Intel Core i5-7400';

INSERT INTO orders (user_id)
SELECT id FROM users WHERE name = 'Наталья';

INSERT INTO orders_products (order_id, product_id, total)
SELECT LAST_INSERT_ID(), id, 1 FROM products
WHERE name IN ('Intel Core i5-7400', 'Gigabyte H310M S2H');

INSERT INTO orders (user_id)
SELECT id FROM users WHERE name = 'Иван';

INSERT INTO orders_products (order_id, product_id, total)
SELECT LAST_INSERT_ID(), id, 1 FROM products
WHERE name IN ('AMD FX-8320', 'ASUS ROG MAXIMUS X HERO');

SELECT id, name, birthday_at FROM users;


-- 1. Составьте список пользователей users, которые осуществили хотя бы один
-- заказ orders в интернет магазине.
-- Заполняем таблицу orders

INSERT INTO orders (user_id)
SELECT id FROM users WHERE name = 'Геннадий';

INSERT INTO orders_products (order_id, product_id, total)
SELECT LAST_INSERT_ID(), id, 2 FROM products
WHERE name = 'Intel Core i5-7400';

INSERT INTO orders (user_id)
SELECT id FROM users WHERE name = 'Наталья';

INSERT INTO orders_products (order_id, product_id, total)
SELECT LAST_INSERT_ID(), id, 1 FROM products
WHERE name IN ('Intel Core i5-7400', 'Gigabyte H310M S2H');

INSERT INTO orders (user_id)
SELECT id FROM users WHERE name = 'Иван';

INSERT INTO orders_products (order_id, product_id, total)
SELECT LAST_INSERT_ID(), id, 1 FROM products
WHERE name IN ('AMD FX-8320', 'ASUS ROG MAXIMUS X HERO');

-- Проеверяем таблицу orders
SELECT * FROM orders;
-- Проверяем таблицу users
SELECT * FROM users;
-- Запрос сопоставляет пользователей по id,
-- которые осуществляли заказ в таблице orders по user_id
SELECT users.id, users.name, users.birthday_at 
	FROM users JOIN orders WHERE users.id = orders.user_id;
	

-- 2. Выведите список товаров products и разделов catalogs, который соответствует товару.

-- Смотрим табоицу catalogs, ключевой столбец id.
SELECT * FROM catalogs;
-- Смотрим табоицу products, ключевой столбец catalog_id.
SELECT * FROM products;

-- Составляем запрос.
SELECT p.id, p.name, p.price, c.name 
	FROM products AS p 
	JOIN catalogs AS c 
	ON c.id = p.catalog_id;


-- 3. (по желанию) Пусть имеется таблица рейсов flights (id, from, to) и 
-- таблица городов cities (label, name). Поля from, to и label содержат
-- английские названия городов, поле name — русское. 
-- Выведите список рейсов flights с русскими названиями городов.
-- Создаем и заполняем таблицы.

CREATE TABLE flights (
  id SERIAL PRIMARY KEY,
  `from` VARCHAR(255) COMMENT 'Город отравления',
  `to` VARCHAR(255) COMMENT 'Город прибытия'
) COMMENT = 'Рейсы';

INSERT INTO flights (`from`, `to`) VALUES
('moscow', 'omsk'),
('novgorod', 'kazan'),
('irkutsk', 'moscow'),
('omsk', 'irkutsk'),
('moscow', 'kazan');

CREATE TABLE cities (
  id SERIAL PRIMARY KEY,
  label VARCHAR(255) COMMENT 'Код города',
  name VARCHAR(255) COMMENT 'Название города'
) COMMENT = 'Словарь городов';

INSERT INTO cities (label, name) VALUES
('moscow', 'Москва'),
('irkutsk', 'Иркутск'),
('novgorod', 'Новгород'),
('kazan', 'Казань'),
('omsk', 'Омск');

-- Смотрим таблицу flights.
SELECT * FROM flights;
-- Смотрим таблицу cities.
SELECT * FROM cities;

-- Составляем запрос.
SELECT f.id, cf.name, ct.name 
	FROM flights AS f
	JOIN cities AS cf
	ON cf.label = f.from
	JOIN cities AS ct
	ON ct.label = f.to 
	ORDER BY id;

