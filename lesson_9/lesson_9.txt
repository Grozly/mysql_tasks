-- Тема "Транзакции, переменные, представления"
-- 1) В базе данных shop и sample присутствуют одни и те же таблицы,
-- учебной базы данных. Переместите запись id = 1 из таблицы 
-- shop.users в таблицу sample.users. Используйте транзакции.
-- Импортирую данные из файла source в базу данных.
USE lesson_9;
SHOW TABLES;
SELECT * FROM users;
SELECT * FROM sample.users;

START TRANSACTION;
UPDATE users SET id = id - 1 WHERE id = 1;
UPDATE sample.users SET id = id + 1 WHERE id = 0;
COMMIT;

-- 2) Создайте представление, которое выводит название name товарной
-- позиции из таблицы products и соответствующее название каталога
-- name из таблицы catalogs.

CREATE OR REPLACE VIEW prod AS
SELECT 
	p.name AS prod_name,
	c.name AS catal_name
	FROM products AS p
	JOIN catalogs AS c
	ON p.catalog_id = c.id;
	
SELECT * FROM prod;

-- Тема "Хранимые процедуры и функции, триггеры"
-- 1) Создайте хранимую функцию hello(), которая будет возвращать приветствие,
-- в зависимости от текущего времени суток. С 6:00 до 12:00 функция должна
-- возвращать фразу "Доброе утро", с 12:00 до 18:00 функция должна возвращать
-- фразу "Добрый день", с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".

DELIMITER //

CREATE FUNCTION hello ()
RETURNS TINYTEXT NO SQL
BEGIN
	DECLARE hour INT;
	SET hour = HOUR(NOW());
	CASE
	WHERE hour BETWEEN 0 AND 5 THEN 
	  RETURN "Доброй ночи";
	WHERE hour BETWEEN 6 AND 11 THEN 
	  RETURN "Доброе утро";
	WHERE BETWEEN 12 AND 17 THEN 
	  RETURN "Добрый день";
	WHERE BETWEEN 18 AND 23 THEN 
	  RETURN "Добрый вечер";
	END CASE;
END//

-- 2) В таблице products есть два текстовых поля: name с названием товара и description
-- с его описанием. Допустимо присутствие обоих полей или одно из них. Ситуация, когда
-- оба поля принимают неопределенное значение NULL неприемлема. Используя триггеры, 
-- добейтесь того, чтобы одно из этих полей или оба поля были заполнены. При попытке присвоить
-- полям NULL-значение необходимо отменить операцию.

DELIMITER //

CREATE TRIGGER validate_name_discription_insert BEFORE UPDATE ON produrts
FOR EACH ROW BEGIN 
	IF NEW.name IS NULL AND NEW.description IS NULL THEN 
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Both name and description are NULL';
	END IF;
END//
